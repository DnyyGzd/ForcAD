version: '2.4'

x-service: &default-ms
  build:
    context: .
    dockerfile: ./docker_config/services/Dockerfile
  env_file: &db-environment
    - ./docker_config/postgres_environment.env
    - ./docker_config/redis_environment.env
    - ./docker_config/rabbitmq_environment.env
  restart: on-failure
  dns:                # Unipa ready
    - 10.80.150.1     # Unipa ready

x-celery-service: &default-celery-ms
  build:
    context: .
    dockerfile: ./docker_config/celery/Dockerfile
  volumes:
    - ./checkers/:/checkers/
  env_file: *db-environment
  restart: on-failure
  dns:                # Unipa ready
    - 10.80.150.1     # Unipa ready

services:
  celery:
    <<: *default-celery-ms
    environment:
      - TEST
      - SERVICE=worker
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  flower:
    <<: *default-celery-ms
    environment:
      - TEST
      - SERVICE=flower
    env_file:
      - ./docker_config/services/admin.env
      - ./docker_config/postgres_environment.env
      - ./docker_config/redis_environment.env
      - ./docker_config/rabbitmq_environment.env
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  initializer:
    build:
      context: .
      dockerfile: ./docker_config/initializer/Dockerfile
    env_file: *db-environment
    volumes:
      - ./config.yml:/config.yml:ro
    environment:
      - TEST
      - CONFIG_PATH=/config.yml
    restart: on-failure
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  ticker:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=ticker
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  client-api:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=api
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  admin-api:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=admin
    env_file:
      - ./docker_config/services/admin.env
      - ./docker_config/postgres_environment.env
      - ./docker_config/redis_environment.env
      - ./docker_config/rabbitmq_environment.env
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  events:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=events
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  monitoring:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=monitoring
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  http-receiver:
    <<: *default-ms
    environment:
      - TEST
      - SERVICE=http_receiver
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  nginx:
    build:
      context: .
      dockerfile: ./docker_config/nginx/Dockerfile
      args:
        DNS_RESOLVER: 127.0.0.11
    ports:
      - "8080:80"
      - "80:80"
    restart: on-failure
    depends_on:
      - flower
      - client-api
      - admin-api
      - events
      - monitoring
      - http-receiver
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  redis:
    image: redis:6.2.5-alpine
    command: [ "sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD" ]
    restart: on-failure
    sysctls:
      net.core.somaxconn: 1024
    env_file:
      - ./docker_config/redis_environment.env
    ports:
      - "6379:6379"
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.9.7-management-alpine
    restart: on-failure
    env_file:
      - ./docker_config/rabbitmq_environment.env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

  postgres:
    image: postgres:13.4-alpine
    volumes:
      - ./docker_volumes/postgres/data/:/var/lib/postgresql/data/
    env_file:
      - ./docker_config/postgres_environment.env
    restart: on-failure
    ports:
      - "5432:5432"
      - "6432:5432"
    networks:
      - forcad_network
    dns:                # Unipa ready
      - 10.80.150.1     # Unipa ready

networks:
  forcad_network:
    name: forcad_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/16
    driver_opts:
      com.docker.network.bridge.name: forcad_network
